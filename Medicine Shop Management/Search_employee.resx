<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAwlJREFUeF7t
        mu9P00AYx/cnqNFE/d9MfKXRtAvKluiGbEp0K2m3xBcjJrIrTF4y4YVGxV8wI0KGBmWgaKL/yXnf9Slr
        u84WTcx6vW/yJPC01/XzvVt79+wySkpKSv9L9/XmGVNrvrc0tom/KZ0OGdr8eVNj3wQ8RwgjDpGjw3IL
        vW3p7DPAa6UWN6YW+iZYmr0n/Ujw9nx95hFvfH3By1urvHprUf6REOz5Ru8Zb/xa4zd2Vnl+vc2NojMS
        TJ1tUxN55MA3ffBzAr5y8JRf337Mc+/avDrtjAIra3epmRxyhr3tG/aArwr4SQHv7X0ry7r1CXaCmiZf
        o+DR8+mCvy3g9wfDfghet3ekhp87eK7gvfDVAj3wFLyCl0NR8Lm3yz74ypWlk9Q0+RoJv6/gg/AfUwsv
        FkCfFLwsUvAR8EbBneGxPfPSg9PUNPk6LrxU1Z3R8E+G4E2d9RS8LEo1PGBqVMOrT6OM5YdHKatSpklO
        gqOmsVeEPBDg3QLmKHjEvZlW6EWTFoTtKE7PyxKhBogh8QHJmgv/c43f7ckHjwg1QCS2kKyWFnlhc4Xn
        uyuhjd243FniF18zfuHlfCIC94p7xr2HGoBChWsC6nYoZASh3cCFwj4kCYF7DzUAoufALg7iB4t8J9yE
        8h3nAkkPwvYrjgkyvAZFrBPysLwmVEJMyG20uTFFK78s261de3iKmsqjqGcCfterlJz5gJgNHs5eZWep
        qTzymoC1fpQJ9YnWOWp6JPF6fROcdY1TLlL/agLyCPq3r3HKxVLQBCyG4poQ9qHjlIutvzXB0u2OyPme
        uOOUO5aiTJiM8UxIvOKY4O76MDX7uzIhDSagOqRMiGECSm3UVB4pE4SiTMhtLHPjaFNkSkzIB0zIYwGV
        JhNmb4abMNgeq0zAZOmHMkGZILEJ3sqSURRLafE28Jng2UEmTJBrs7SrP5mA1yNKbjhmybhd3lXw64B5
        Ar4Sbu8DHufQ6XLKV20uLvSjD6/ZX3CMTpNb3pGQmp4PCr3dN0HAp6bnlZSUxliZzG+DJmoY62/awgAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>